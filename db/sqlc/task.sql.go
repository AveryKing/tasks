// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: task.sql

package db

import (
	"context"
)

const createTask = `-- name: CreateTask :one
INSERT INTO tasks ("user", title, priority)
VALUES ($1, $2, $3) RETURNING id, "user", title, priority, created_at
`

type CreateTaskParams struct {
	User     int64  `json:"user"`
	Title    string `json:"title"`
	Priority int32  `json:"priority"`
}

func (q *Queries) CreateTask(ctx context.Context, arg CreateTaskParams) (Task, error) {
	row := q.queryRow(ctx, q.createTaskStmt, createTask, arg.User, arg.Title, arg.Priority)
	var i Task
	err := row.Scan(
		&i.ID,
		&i.User,
		&i.Title,
		&i.Priority,
		&i.CreatedAt,
	)
	return i, err
}

const getTasks = `-- name: GetTasks :one
SELECT id, "user", title, priority, created_at FROM tasks WHERE "user" = $1
`

func (q *Queries) GetTasks(ctx context.Context, user int64) (Task, error) {
	row := q.queryRow(ctx, q.getTasksStmt, getTasks, user)
	var i Task
	err := row.Scan(
		&i.ID,
		&i.User,
		&i.Title,
		&i.Priority,
		&i.CreatedAt,
	)
	return i, err
}
